#ifndef PATTERNS_H
#define PATTERNS_H

#include <inttypes.h>

// List of patterns that can be built, both single and multi-led patterns are found in this list.
// Within both single and multi LED pattern lists there are 'core' patterns which are associated
// with a class, and there are 'shell' patterns which are simply wrapperns around another pattern
// with different parameters passed to the constructor.  There is no way to know which patterns
// are 'core' patterns, except by looking at PatternBuilder::generate to see which classes exist
enum PatternID : int8_t {
  // no pattern at all, use this sparingly and default to
  // PATTERN_FIRST when possible
  PATTERN_NONE = (PatternID)-1,

  // first pattern of all
  PATTERN_FIRST = 0,
  // =====================================

  // all 'single led' patterns below

  PATTERN_ULTRA_DOPS  = PATTERN_FIRST,

PATTERN_HYPERSTROBE_DOPS_DASH,
PATTERN_STROBIE_DOPS_DASH,
PATTERN_FLARE_DOPS_DASH,
PATTERN_BURST_DOPS_DASH,
PATTERN_FLICKER_DOPS_DASH,
PATTERN_BLINKY_DOPS_DASH,
PATTERN_INOVA_BLINK_DOPS_DASH,

PATTERN_HYPERSTROBE_STROBIE_DASH,
PATTERN_STROBIE_STROBIE_DASH,
PATTERN_FLARE_STROBIE_DASH,
PATTERN_BURST_STROBIE_DASH,
PATTERN_FLICKER_STROBIE_DASH,
PATTERN_BLINKY_STROBIE_DASH,
PATTERN_INOVA_BLINK_STROBIE_DASH,

PATTERN_HYPERSTROBE_STROBE_DASH,
PATTERN_STROBIE_STROBE_DASH,
PATTERN_FLARE_STROBE_DASH,
PATTERN_BURST_STROBE_DASH,
PATTERN_FLICKER_STROBE_DASH,
PATTERN_BLINKY_STROBE_DASH,
PATTERN_INOVA_BLINK_STROBE_DASH,

PATTERN_HYPERSTROBE_HYPNOSTROBE_DASH,
PATTERN_STROBIE_HYPNOSTROBE_DASH,
PATTERN_FLARE_HYPNOSTROBE_DASH,
PATTERN_BURST_HYPNOSTROBE_DASH,
PATTERN_FLICKER_HYPNOSTROBE_DASH,
PATTERN_BLINKY_HYPNOSTROBE_DASH,
PATTERN_INOVA_BLINK_HYPNOSTROBE_DASH,

PATTERN_HYPERSTROBE_HYPERSTROBE_DASH,
PATTERN_STROBIE_HYPERSTROBE_DASH,
PATTERN_FLARE_HYPERSTROBE_DASH,
PATTERN_BURST_HYPERSTROBE_DASH,
PATTERN_FLICKER_HYPERSTROBE_DASH,
PATTERN_BLINKY_HYPERSTROBE_DASH,
PATTERN_INOVA_BLINK_HYPERSTROBE_DASH,
PATTERN_RIBBON_DOPS_DASH,
PATTERN_RIBBON_STROBIE_DASH,
PATTERN_RIBBON_STROBE_DASH,
PATTERN_RIBBON_HYPNOSTROBE_DASH,
PATTERN_RIBBON_HYPERSTROBE_DASH,
//   PATTERN_ULTRA_DOPS_BLEND,
// PATTERN_PARTICLE_DOPS_BLEND,
// PATTERN_BLIP_DOPS_BLEND,
// PATTERN_DOPS_DOPS_BLEND,
// PATTERN_HYPERSTROBE_DOPS_BLEND,
// PATTERN_STROBIE_DOPS_BLEND,
// PATTERN_FLARE_DOPS_BLEND,
// PATTERN_BURST_DOPS_BLEND,
// PATTERN_FLICKER_DOPS_BLEND,
// PATTERN_BLINKY_DOPS_BLEND,
// PATTERN_INOVA_BLINK_DOPS_BLEND,
// PATTERN_ULTRA_STROBIE_BLEND,
// PATTERN_PARTICLE_STROBIE_BLEND,
// PATTERN_BLIP_STROBIE_BLEND,
// PATTERN_DOPS_STROBIE_BLEND,
// PATTERN_HYPERSTROBE_STROBIE_BLEND,
// PATTERN_STROBIE_STROBIE_BLEND,
// PATTERN_FLARE_STROBIE_BLEND,
// PATTERN_BURST_STROBIE_BLEND,
// PATTERN_FLICKER_STROBIE_BLEND,
// PATTERN_BLINKY_STROBIE_BLEND,
// PATTERN_INOVA_BLINK_STROBIE_BLEND,
// PATTERN_ULTRA_STROBE_BLEND,
// PATTERN_PARTICLE_STROBE_BLEND,
// PATTERN_BLIP_STROBE_BLEND,
// PATTERN_DOPS_STROBE_BLEND,
// PATTERN_HYPERSTROBE_STROBE_BLEND,
// PATTERN_STROBIE_STROBE_BLEND,
// PATTERN_FLARE_STROBE_BLEND,
// PATTERN_BURST_STROBE_BLEND,
// PATTERN_FLICKER_STROBE_BLEND,
// PATTERN_BLINKY_STROBE_BLEND,
// PATTERN_INOVA_BLINK_STROBE_BLEND,
// PATTERN_ULTRA_HYPNOSTROBE_BLEND,
// PATTERN_PARTICLE_HYPNOSTROBE_BLEND,
// PATTERN_BLIP_HYPNOSTROBE_BLEND,
// PATTERN_DOPS_HYPNOSTROBE_BLEND,
// PATTERN_HYPERSTROBE_HYPNOSTROBE_BLEND,
// PATTERN_STROBIE_HYPNOSTROBE_BLEND,
// PATTERN_FLARE_HYPNOSTROBE_BLEND,
// PATTERN_BURST_HYPNOSTROBE_BLEND,
// PATTERN_FLICKER_HYPNOSTROBE_BLEND,
// PATTERN_BLINKY_HYPNOSTROBE_BLEND,
// PATTERN_INOVA_BLINK_HYPNOSTROBE_BLEND,
// PATTERN_ULTRA_HYPERSTROBE_BLEND,
// PATTERN_PARTICLE_HYPERSTROBE_BLEND,
// PATTERN_BLIP_HYPERSTROBE_BLEND,
// PATTERN_DOPS_HYPERSTROBE_BLEND,
// PATTERN_HYPERSTROBE_HYPERSTROBE_BLEND,
// PATTERN_STROBIE_HYPERSTROBE_BLEND,
// PATTERN_FLARE_HYPERSTROBE_BLEND,
// PATTERN_BURST_HYPERSTROBE_BLEND,
// PATTERN_FLICKER_HYPERSTROBE_BLEND,
// PATTERN_BLINKY_HYPERSTROBE_BLEND,
// PATTERN_INOVA_BLINK_HYPERSTROBE_BLEND,
// PATTERN_RIBBON_DOPS_BLEND,
// PATTERN_RIBBON_STROBIE_BLEND,
// PATTERN_RIBBON_STROBE_BLEND,
// PATTERN_RIBBON_HYPNOSTROBE_BLEND,
// PATTERN_RIBBON_HYPERSTROBE_BLEND,
  // PATTERN_PARTICLE_DOPS,
  // PATTERN_BLIP_DOPS,
  // PATTERN_DOPS_DOPS,
  // PATTERN_HYPERSTROBE_DOPS,
  // PATTERN_STROBIE_DOPS,
  // PATTERN_FLARE_DOPS,
  // PATTERN_BURST_DOPS,
  // PATTERN_FLICKER_DOPS,
  // PATTERN_BLINKY_DOPS,
  // PATTERN_INOVA_BLINK_DOPS,
  // PATTERN_ULTRA_STROBIE,
  // PATTERN_PARTICLE_STROBIE,
  // PATTERN_BLIP_STROBIE,
  // PATTERN_DOPS_STROBIE,
  // PATTERN_HYPERSTROBE_STROBIE,
  // PATTERN_STROBIE_STROBIE,
  // PATTERN_FLARE_STROBIE,
  // PATTERN_BURST_STROBIE,
  // PATTERN_FLICKER_STROBIE,
  // PATTERN_BLINKY_STROBIE,
  // PATTERN_INOVA_BLINK_STROBIE,
  // PATTERN_ULTRA_STROBE,
  // PATTERN_PARTICLE_STROBE,
  // PATTERN_BLIP_STROBE,
  // PATTERN_DOPS_STROBE,
  // PATTERN_HYPERSTROBE_STROBE,
  // PATTERN_STROBIE_STROBE,
  // PATTERN_FLARE_STROBE,
  // PATTERN_BURST_STROBE,
  // PATTERN_FLICKER_STROBE,
  // PATTERN_BLINKY_STROBE,
  // PATTERN_INOVA_BLINK_STROBE,
  // PATTERN_ULTRA_HYPNOSTROBE,
  // PATTERN_PARTICLE_HYPNOSTROBE,
  // PATTERN_BLIP_HYPNOSTROBE,
  // PATTERN_DOPS_HYPNOSTROBE,
  // PATTERN_HYPERSTROBE_HYPNOSTROBE,
  // PATTERN_STROBIE_HYPNOSTROBE,
  // PATTERN_FLARE_HYPNOSTROBE,
  // PATTERN_BURST_HYPNOSTROBE,
  // PATTERN_FLICKER_HYPNOSTROBE,
  // PATTERN_BLINKY_HYPNOSTROBE,
  // PATTERN_INOVA_BLINK_HYPNOSTROBE,
  // PATTERN_ULTRA_HYPERSTROBE,
  // PATTERN_PARTICLE_HYPERSTROBE,
  // PATTERN_BLIP_HYPERSTROBE,
  // PATTERN_DOPS_HYPERSTROBE,
  // PATTERN_HYPERSTROBE_HYPERSTROBE,
  // PATTERN_STROBIE_HYPERSTROBE,
  // PATTERN_FLARE_HYPERSTROBE,
  // PATTERN_BURST_HYPERSTROBE,
  // PATTERN_FLICKER_HYPERSTROBE,
  // PATTERN_BLINKY_HYPERSTROBE,
  // PATTERN_INOVA_BLINK_HYPERSTROBE,
  // PATTERN_RIBBON_DOPS,
  // PATTERN_RIBBON_STROBIE,
  // PATTERN_RIBBON_STROBE,
  // PATTERN_RIBBON_HYPNOSTROBE,
  // PATTERN_RIBBON_HYPERSTROBE,
//   PATTERN_ULTRA_DOPS_GAP,
// PATTERN_PARTICLE_DOPS_GAP,
// PATTERN_BLIP_DOPS_GAP,
// PATTERN_DOPS_DOPS_GAP,
// PATTERN_HYPERSTROBE_DOPS_GAP,
// PATTERN_STROBIE_DOPS_GAP,
// PATTERN_FLARE_DOPS_GAP,
// PATTERN_BURST_DOPS_GAP,
// PATTERN_FLICKER_DOPS_GAP,
// PATTERN_BLINKY_DOPS_GAP,
// PATTERN_INOVA_BLINK_DOPS_GAP,
// PATTERN_ULTRA_STROBIE_GAP,
// PATTERN_PARTICLE_STROBIE_GAP,
// PATTERN_BLIP_STROBIE_GAP,
// PATTERN_DOPS_STROBIE_GAP,
// PATTERN_HYPERSTROBE_STROBIE_GAP,
// PATTERN_STROBIE_STROBIE_GAP,
// PATTERN_FLARE_STROBIE_GAP,
// PATTERN_BURST_STROBIE_GAP,
// PATTERN_FLICKER_STROBIE_GAP,
// PATTERN_BLINKY_STROBIE_GAP,
// PATTERN_INOVA_BLINK_STROBIE_GAP,
// PATTERN_ULTRA_STROBE_GAP,
// PATTERN_PARTICLE_STROBE_GAP,
// PATTERN_BLIP_STROBE_GAP,
// PATTERN_DOPS_STROBE_GAP,
// PATTERN_HYPERSTROBE_STROBE_GAP,
// PATTERN_STROBIE_STROBE_GAP,
// PATTERN_FLARE_STROBE_GAP,
// PATTERN_BURST_STROBE_GAP,
// PATTERN_FLICKER_STROBE_GAP,
// PATTERN_BLINKY_STROBE_GAP,
// PATTERN_INOVA_BLINK_STROBE_GAP,
// PATTERN_ULTRA_HYPNOSTROBE_GAP,
// PATTERN_PARTICLE_HYPNOSTROBE_GAP,
// PATTERN_BLIP_HYPNOSTROBE_GAP,
// PATTERN_DOPS_HYPNOSTROBE_GAP,
// PATTERN_HYPERSTROBE_HYPNOSTROBE_GAP,
// PATTERN_STROBIE_HYPNOSTROBE_GAP,
// PATTERN_FLARE_HYPNOSTROBE_GAP,
// PATTERN_BURST_HYPNOSTROBE_GAP,
// PATTERN_FLICKER_HYPNOSTROBE_GAP,
// PATTERN_BLINKY_HYPNOSTROBE_GAP,
// PATTERN_INOVA_BLINK_HYPNOSTROBE_GAP,
// PATTERN_ULTRA_HYPERSTROBE_GAP,
// PATTERN_PARTICLE_HYPERSTROBE_GAP,
// PATTERN_BLIP_HYPERSTROBE_GAP,
// PATTERN_DOPS_HYPERSTROBE_GAP,
// PATTERN_HYPERSTROBE_HYPERSTROBE_GAP,
// PATTERN_STROBIE_HYPERSTROBE_GAP,
// PATTERN_FLARE_HYPERSTROBE_GAP,
// PATTERN_BURST_HYPERSTROBE_GAP,
// PATTERN_FLICKER_HYPERSTROBE_GAP,
// PATTERN_BLINKY_HYPERSTROBE_GAP,
// PATTERN_INOVA_BLINK_HYPERSTROBE_GAP,
  
  PATTERN_SOLID,

  // ADD NEW PATTERNS HERE

  // Meta pattern constants
  INTERNAL_PATTERNS_END,
  PATTERN_LAST = (INTERNAL_PATTERNS_END - 1),
  PATTERN_COUNT = (PATTERN_LAST - PATTERN_FIRST) + 1,  // total number of patterns
};

class Pattern;

class Patterns {
 public:
  static void make_default(uint8_t index, Pattern &pat);
  static void make_pattern(PatternID id, Pattern &pat);
};

#endif
